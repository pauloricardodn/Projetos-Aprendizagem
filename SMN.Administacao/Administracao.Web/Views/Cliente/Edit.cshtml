@model Administracao.Web.ViewModel.Cliente.ClienteViewModel

@{
    ViewBag.Title = "Edit";
    Layout = null;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdCliente)
        @Html.HiddenFor(model => model.DataCad)
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" , required = "required" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control", id = "celular", required = "required" } })
                @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Sexo, new SelectList(new string[] { "Selecione o Sexo", "Masculino", "Feminino" }), new { @class = "dropdown-header", required = "required" })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", id = "CPF" , required = "required" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DataNasc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.DataNasc, new { htmlAttributes = new { @class = "form-control date", type="date", id= "datNasc", required = "required" } })
                @Html.ValidationMessageFor(model => model.DataNasc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
                <input type="reset" value="Limpar" class="btn btn-primary" />
                <input type="button" value="Cancelar" class="btn btn-default" onclick="cancelarEditar()" />
            </div>
        </div>
    </div>
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

}